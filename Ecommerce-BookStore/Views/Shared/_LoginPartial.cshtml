@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <div style="display:flex; align-items:center;justify-content:center; flex-direction:column;">
                    <i style="color:#81c408 !important; font-size:25px; " class="fas fa-user" ></i> @await GetUserNameAsync()
            </div></a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button style="background-color:#81c408; border:1px solid black ; border-radius:10px ; color:white  ; margin-top:10px !important" id="logout" type="submit" class="mx-2 py-2 nav-link btn btn-link text-dark border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a style="background-color:#81c408; border:1px solid white ; border-radius:20px ; color:black ;" class="nav-link  mx-3" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a style="background-color:#81c408; border:1px solid white ; border-radius:20px ; color:black ;" class="nav-link " id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

@functions {
    public async Task<string> GetUserNameAsync()
    {
        var user = await UserManager.GetUserAsync(User);
        return user?.GetType().GetProperty("Name")?.GetValue(user)?.ToString();
    }
}